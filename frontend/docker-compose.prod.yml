# Galaxy ERP 生产环境 Docker Compose 配置

version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: galaxy-erp-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8080
    depends_on:
      - backend
    networks:
      - galaxy-erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: galaxy-erp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - galaxy-erp-network

  # 后端服务 (假设)
  backend:
    image: galaxy-erp-backend:latest
    container_name: galaxy-erp-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
    depends_on:
      - database
    networks:
      - galaxy-erp-network

  # 数据库服务
  database:
    image: postgres:15-alpine
    container_name: galaxy-erp-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=galaxyerp
      - POSTGRES_USER=galaxyerp
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - galaxy-erp-network

volumes:
  postgres_data:

networks:
  galaxy-erp-network:
    driver: bridge